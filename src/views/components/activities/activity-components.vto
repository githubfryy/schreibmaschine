{{/* 
  Activity Components - Complete activity interface system
  Based on Frontend Implementation Strategy patterns
*/}}

{{ function activityCard(activity, participant, options = {}) }}
  {{ set extraClass = options.extraClass || '' }}
  {{ set showControls = options.showControls !== false }}
  {{ set isTeamer = participant.role === 'teamer' }}
  
  <div class="activity-card {{ extraClass }}" 
       data-activity-id="{{ activity.id }}"
       x-data="activityCard('{{ activity.id }}', '{{ participant.id }}')">
    
    <header class="activity-header">
      <h3 class="activity-title">{{ activity.title }}</h3>
      <div class="activity-status status--{{ activity.status }}">
        {{ activity.status | activityStatus }}
      </div>
    </header>
    
    <div class="activity-content">
      {{ if activity.description }}
        <p class="activity-description">{{ activity.description }}</p>
      {{ /if }}
      
      {{/* Dynamic activity interface */}}
      {{ if activity.type === "individual_pad" }}
        {{ individualPadInterface(activity, participant) }}
      {{ else if activity.type === "collaborative_pad" }}
        {{ collaborativePadInterface(activity, participant) }}
      {{ else if activity.type === "rhyming_chain" }}
        {{ rhymingChainInterface(activity, participant) }}
      {{ else if activity.type === "paper_drawing" }}
        {{ paperDrawingInterface(activity, participant) }}
      {{ else if activity.type === "timed_writing" }}
        {{ timedWritingInterface(activity, participant) }}
      {{ /if }}
    </div>
    
    <footer class="activity-footer">
      <div class="activity-meta">
        <span class="participant-count">
          {{ activity.participants.length | participantCount }}
        </span>
        <span class="last-updated">
          {{ activity.updated_at | timeAgo }}
        </span>
      </div>
      
      {{ if showControls && isTeamer }}
        <div class="teamer-controls">
          <button class="button button--sm" 
                  @click="toggleActivityStatus()"
                  x-text="activity.status === 'active' ? 'Pausieren' : 'Starten'">
          </button>
          
          <button class="button button--ghost button--sm"
                  @click="$dispatch('open-modal', { id: 'activity-settings', activity })"
                  aria-label="Activity-Einstellungen">
            <span class="icon">⚙</span>
          </button>
        </div>
      {{ /if }}
    </footer>
  </div>
{{ /function }}

{{ function individualPadInterface(activity, participant) }}
  <div class="individual-pad" 
       x-data="individualPad('{{ activity.id }}', '{{ participant.id }}')">
    
    <div class="writing-area">
      <textarea 
        x-model="content"
        @input.debounce.1000ms="autoSave()"
        @focus="startTyping()"
        @blur="stopTyping()"
        class="writing-textarea"
        placeholder="Beginnen Sie zu schreiben..."
        rows="10">{{ activity.userContent | escape }}</textarea>
      
      <div class="writing-meta">
        <span class="word-count" x-text="wordCount + ' Wörter'"></span>
        <span class="save-status" 
              :class="'status--' + saveStatus" 
              x-text="saveStatusText"></span>
      </div>
    </div>
    
    {{/* Optional timer for timed writing */}}
    {{ if activity.timeLimit }}
      <div class="timer" x-show="timeRemaining > 0">
        <span class="timer-text">Verbleibende Zeit:</span>
        <span class="timer-value" x-text="formatTime(timeRemaining)"></span>
      </div>
    {{ /if }}
  </div>
{{ /function }}

{{ function collaborativePadInterface(activity, participant) }}
  <div class="collaborative-pad" 
       x-data="collaborativePad('{{ activity.id }}', '{{ participant.id }}')">
    
    {{/* Collaboration Status */}}
    <div class="collaboration-status">
      <div class="active-participants">
        <template x-for="participant in activeParticipants" :key="participant.id">
          <div class="participant-indicator">
            <span class="participant-avatar" x-text="getInitials(participant.display_name)"></span>
            <span class="participant-name" x-text="participant.display_name"></span>
          </div>
        </template>
      </div>
      
      <div class="typing-indicators">
        <template x-for="participant in typingParticipants" :key="participant.id">
          <div class="typing-indicator">
            <span x-text="participant.display_name"></span> tippt...
          </div>
        </template>
      </div>
    </div>
    
    <div class="writing-area">
      <textarea 
        x-model="content"
        @input="handleInput()"
        @focus="startTyping()"
        @blur="stopTyping()"
        class="writing-textarea collaborative-textarea"
        placeholder="Schreiben Sie gemeinsam..."
        rows="15">{{ activity.content | escape }}</textarea>
      
      <div class="collaboration-meta">
        <span class="word-count" x-text="wordCount + ' Wörter'"></span>
        <span class="connection-status" 
              :class="isConnected ? 'connected' : 'disconnected'"
              x-text="isConnected ? 'Verbunden' : 'Getrennt'"></span>
        <span class="save-status" 
              :class="'status--' + saveStatus" 
              x-text="saveStatusText"></span>
      </div>
    </div>
  </div>
{{ /function }}

{{ function rhymingChainInterface(activity, participant) }}
  <div class="rhyming-chain" 
       x-data="rhymingChain('{{ activity.id }}', '{{ participant.id }}')">
    
    {{/* Game Progress */}}
    <div class="game-progress">
      <div class="turn-info">
        <span class="turn-label">Runde:</span>
        <span class="turn-number">{{ activity.currentTurn || 1 }}</span>
      </div>
      
      <div class="papers-info">
        <span class="papers-label">Blätter im Umlauf:</span>
        <span class="papers-count">{{ activity.paperCount || activity.participants.length }}</span>
      </div>
    </div>
    
    {{ if activity.previousLine }}
      <div class="previous-line">
        <label class="previous-line-label">Vorherige Zeile:</label>
        <div class="line-content">{{ activity.previousLine }}</div>
      </div>
    {{ /if }}
    
    {{ if activity.isUserTurn }}
      <div class="input-area">
        <input type="text" 
               x-model="currentLine"
               @keyup.enter="submitLine()"
               @input="checkRhyme()"
               class="input rhyme-input"
               placeholder="Ihre reimende Zeile..."
               maxlength="200">
        
        {{/* Rhyme Helper */}}
        <div class="rhyme-helper" x-show="rhymeSuggestions.length > 0">
          <div class="rhyme-suggestions">
            <template x-for="suggestion in rhymeSuggestions" :key="suggestion">
              <button type="button" 
                      class="rhyme-suggestion"
                      @click="applyRhyme(suggestion)"
                      x-text="suggestion"></button>
            </template>
          </div>
        </div>
        
        <div class="action-buttons">
          <button class="button button--primary" 
                  @click="submitLine()" 
                  :disabled="!currentLine.trim()"
                  x-text="isLastRound ? 'Fertigstellen' : 'Absenden'">
          </button>
          
          {{ if activity.allowSkip }}
            <button class="button" 
                    @click="skipTurn()"
                    x-show="canSkip"
                    :disabled="!canSkip">
              Überspringe Runde
            </button>
          {{ /if }}
        </div>
      </div>
    {{ else }}
      <div class="waiting-state">
        <p class="waiting-message">
          {{ if activity.currentPlayer }}
            {{ activity.currentPlayer.display_name }} ist an der Reihe...
          {{ else }}
            Warten auf Spielstart...
          {{ /if }}
        </p>
        
        {{ if activity.turnOrder }}
          <div class="turn-order">
            {{ for player, index of activity.turnOrder }}
              <span class="player-indicator {{ player.id === activity.currentPlayer?.id ? 'current' : '' }}">
                {{ player.display_name }}
              </span>
            {{ /for }}
          </div>
        {{ /if }}
      </div>
    {{ /if }}
    
    {{/* Game Timer */}}
    {{ if activity.turnTimeLimit }}
      <div class="turn-timer" x-show="timeRemaining > 0 && activity.isUserTurn">
        <div class="timer-bar">
          <div class="timer-progress" 
               :style="`width: ${(timeRemaining / {{ activity.turnTimeLimit }}) * 100}%`"></div>
        </div>
        <span class="timer-text" x-text="formatTime(timeRemaining)"></span>
      </div>
    {{ /if }}
  </div>
{{ /function }}

{{ function paperDrawingInterface(activity, participant) }}
  <div class="paper-drawing" 
       x-data="paperDrawing('{{ activity.id }}', '{{ participant.id }}')">
    
    <div class="paper-selection">
      <h4>Wählen Sie ein Papier:</h4>
      
      <div class="paper-grid">
        <template x-for="paper in availablePapers" :key="paper.id">
          <div class="paper-card"
               :class="{ 'selected': selectedPaper?.id === paper.id }"
               @click="selectPaper(paper)">
            
            <div class="paper-color" :style="`background-color: ${paper.color}`"></div>
            
            <div class="paper-info">
              <h5 class="paper-title" x-text="paper.title"></h5>
              <p class="paper-prompt" x-text="paper.prompt"></p>
              
              {{ if paper.timeLimit }}
                <div class="paper-time">
                  <span class="icon">⏱</span>
                  <span x-text="paper.timeLimit + ' Minuten'"></span>
                </div>
              {{ /if }}
            </div>
          </div>
        </template>
      </div>
    </div>
    
    <div x-show="selectedPaper" class="paper-workspace">
      <div class="paper-header">
        <h4 x-text="selectedPaper?.title"></h4>
        <p class="paper-prompt" x-text="selectedPaper?.prompt"></p>
      </div>
      
      <div class="writing-area">
        <textarea 
          x-model="content"
          @input.debounce.1000ms="autoSave()"
          class="writing-textarea"
          placeholder="Beginnen Sie zu schreiben..."
          rows="12"></textarea>
        
        <div class="writing-meta">
          <span class="word-count" x-text="wordCount + ' Wörter'"></span>
          <span class="save-status" 
                :class="'status--' + saveStatus" 
                x-text="saveStatusText"></span>
        </div>
      </div>
    </div>
  </div>
{{ /function }}

{{ function timedWritingInterface(activity, participant) }}
  <div class="timed-writing" 
       x-data="timedWriting('{{ activity.id }}', '{{ participant.id }}')">
    
    {{/* Timer Display */}}
    <div class="timer-display">
      <div class="timer-circle">
        <svg class="timer-svg" viewBox="0 0 100 100">
          <circle class="timer-track" cx="50" cy="50" r="45"></circle>
          <circle class="timer-progress" 
                  cx="50" cy="50" r="45"
                  :style="`stroke-dasharray: ${progress * 283}px 283px`"></circle>
        </svg>
        
        <div class="timer-text">
          <span class="timer-value" x-text="formatTime(timeRemaining)"></span>
          <span class="timer-label">verbleibend</span>
        </div>
      </div>
      
      <div class="timer-controls">
        <button class="button" 
                @click="toggleTimer()"
                x-text="isRunning ? 'Pausieren' : 'Starten'"
                :disabled="timeRemaining <= 0"></button>
        
        <button class="button button--ghost" 
                @click="resetTimer()"
                :disabled="isRunning">
          Zurücksetzen
        </button>
      </div>
    </div>
    
    <div class="writing-area">
      <textarea 
        x-model="content"
        @input="handleInput()"
        @focus="startTyping()"
        @blur="stopTyping()"
        class="writing-textarea"
        placeholder="Warten Sie auf den Timer-Start..."
        :disabled="!isRunning"
        rows="15"></textarea>
      
      <div class="writing-stats">
        <div class="stat">
          <span class="stat-label">Wörter:</span>
          <span class="stat-value" x-text="wordCount"></span>
        </div>
        
        <div class="stat">
          <span class="stat-label">Zeichen:</span>
          <span class="stat-value" x-text="characterCount"></span>
        </div>
        
        <div class="stat" x-show="wordsPerMinute > 0">
          <span class="stat-label">WPM:</span>
          <span class="stat-value" x-text="Math.round(wordsPerMinute)"></span>
        </div>
      </div>
    </div>
    
    {{/* Completion State */}}
    <div x-show="isCompleted" class="completion-state">
      <h4>Zeit abgelaufen!</h4>
      <p>Sie haben <span x-text="wordCount"></span> Wörter in {{ activity.timeLimit }} Minuten geschrieben.</p>
      
      <div class="completion-actions">
        <button class="button button--primary"
                @click="submitWork()">
          Arbeit abgeben
        </button>
        
        <button class="button button--ghost"
                @click="continueWriting()">
          Weiter schreiben
        </button>
      </div>
    </div>
  </div>
{{ /function }}

{{/* Activity workspace with tabs */}}
{{ function activityWorkspace(activities, participant, options = {}) }}
  {{ set className = options.className || '' }}
  {{ set showEmptyState = options.showEmptyState !== false }}
  
  <main class="activity-workspace {{ className }}">
    {{ if activities.length > 0 }}
      
      {{/* Activity Tabs */}}
      <div class="activity-tabs" 
           x-data="{ selectedActivity: '{{ activities[0].id }}' }">
        
        <nav class="tab-list" role="tablist">
          {{ for activity of activities }}
            <button class="tab-button"
                    :class="{ 'active': selectedActivity === '{{ activity.id }}' }"
                    @click="selectedActivity = '{{ activity.id }}'"
                    role="tab"
                    :aria-selected="selectedActivity === '{{ activity.id }}'"
                    :aria-controls="'panel-{{ activity.id }}'"
                    :id="'tab-{{ activity.id }}'">
              {{ activity.title }}
              <span class="activity-status status--{{ activity.status }}"></span>
            </button>
          {{ /for }}
        </nav>
        
        {{/* Activity Panels */}}
        <div class="tab-panels">
          {{ for activity of activities }}
            <div class="tab-panel"
                 x-show="selectedActivity === '{{ activity.id }}'"
                 x-transition:enter.duration.300ms
                 role="tabpanel"
                 :aria-labelledby="'tab-{{ activity.id }}'"
                 id="panel-{{ activity.id }}">
              
              {{ activityCard(activity, participant, { 
                extraClass: 'activity-panel' 
              }) }}
              
            </div>
          {{ /for }}
        </div>
      </div>
      
    {{ else if showEmptyState }}
      <div class="empty-state">
        <div class="empty-icon">📝</div>
        <h3>Keine Aktivitäten verfügbar</h3>
        <p>Warten Sie auf den Activity-Start durch die Teamleitung.</p>
        
        {{ if participant.role === 'teamer' }}
          <button class="button button--primary"
                  @click="$dispatch('open-modal', { id: 'create-activity' })">
            Activity erstellen
          </button>
        {{ /if }}
      </div>
    {{ /if }}
  </main>
{{ /function }}

{{/* Export all functions */}}
{{ export { 
  activityCard,
  individualPadInterface,
  collaborativePadInterface,
  rhymingChainInterface,
  paperDrawingInterface,
  timedWritingInterface,
  activityWorkspace
} }}